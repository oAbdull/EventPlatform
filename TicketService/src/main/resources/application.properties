# Server configuration
server.port=8083
spring.application.name=TicketService

# PostgreSQL configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/ticketsdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Security configuration (OAuth2)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://eventplatform0.eu.auth0.com/
spring.security.oauth2.resourceserver.jwt.audience=https://eventusers,https://eventplatform0.eu.auth0.com/userinfo

# RabbitMQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.amqp.deserialization.trust.all=true
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.listener.simple.acknowledge-mode=auto

# Custom RabbitMQ properties
rabbitmq.exchange.name=rabbit_exchange
rabbitmq.queue.name=rabbit_subscription_queue
rabbitmq.routing.key=subscription_routing_key

# Eureka configuration
eureka.client.enabled=false
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.server.enable-self-preservation=false
spring.cloud.service-registry.auto-registration.enabled=true
spring.cloud.compatibility-verifier.enabled=false


# Logging
logging.level.org.springframework=INFO
logging.level.org.ticketservice=DEBUG

# Disable Docker Compose
spring.docker.compose.enabled=false