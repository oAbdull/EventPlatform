##spring.main.web-application-type=reactive
#spring.application.name=UserService
#spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#server.port=8081
#spring.main.allow-circular-references=true
#
#spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/userDB}
#
#spring.docker.compose.enabled=false
##spring.security.oauth2.resourceserver.jwt.issuer-uri=https://apieventplatform.eu.auth0.com/
#logging.level.org.springframework.security=DEBUG
#logging.level.org.example.userservice=DEBUG
#
##JWT
#jwt.secret-key=5367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4

spring.application.name=UserService
app.eureka-server=localhost
server.port=8081

# PostgreSQL database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/usersdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA configurations
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# RabbitMQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Eureka configuration
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Okta configuration (retained as requested)
okta.oauth2.issuer=https://dev--yrfqzl5.us.auth0.com/
okta.outh2.client-id=S3KFQTMFmv8GkDILXK7wVNM7l1OtLLT8
okta.outh2.client-secret=suDdS85SPY6UKa__NLBpvvLD_YWlAYxGrwfSA9pZP3lqZr6_IVGjv6zD8QHGWTcm
okta.outh2.domain=dev--yrfqzl5.us.auth0.com