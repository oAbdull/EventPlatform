plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '7.0.3'
}

group = 'org'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.1")
}

dependencies {
	// Keep only Eureka server dependency
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'

	// Optional: If you need AMQP or other dependencies, keep them
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Lombok and dev tools
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.github.ben-manes.caffeine:caffeine'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// Remove explicit Netflix and Jersey dependencies to avoid conflicts
	// implementation 'com.netflix.eureka:eureka-client'
	// implementation 'com.netflix.eureka:eureka-client:1.10.14'
	// implementation 'org.glassfish.jersey.core:jersey-client'
	// implementation 'org.glassfish.jersey.inject:jersey-hk2'
	// implementation 'jakarta.ws.rs:jakarta.ws.rs-api'

	implementation 'org.slf4j:slf4j-api'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'org.discoveryservice.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}